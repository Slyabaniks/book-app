{"version":3,"sources":["BooksAPI.js","components/Book.js","components/Shelf.js","components/FAB.js","views/Home.js","views/Search.js","Provider/index.js","App.js","index.js"],"names":["api","token","localStorage","Math","random","toString","substr","headers","Accept","Authorization","getAll","fetch","concat","then","res","json","data","books","update","book","shelf","id","method","Object","objectSpread","Content-Type","body","JSON","stringify","search","query","Books","handleChange","_callee","e","result","regenerator_default","a","wrap","_context","prev","next","persist","target","value","_this","props","sent","moveBook","t0","console","log","stop","this","react_default","createElement","className","style","width","height","backgroundImage","imageLinks","thumbnail","onChange","disabled","title","authors","Component","Shelf","map","Book_Books","assign","key","FAB","react_router_dom","to","Home","addBooks","Shelf_Shelf","currentlyReading","wantToRead","read","FAB_FAB","Search","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","_ref","asyncToGenerator","mark","results","setState","trim","error","_x","apply","arguments","state","_context2","_this2","type","placeholder","length","foundShelf","find","searchBook","textAlign","MyContext","React","createContext","index","filter","newShelf","allShelfs","newBooks","allBooks","bookID","Provider","children","BooksApp","Provider_index","react_router","exact","path","render","Consumer","context","Home_Home","Search_Search","ReactDOM","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.b7173005.chunk.js","sourcesContent":["\nconst api = \"https://reactnd-books-api.udacity.com\"\n\n\n// Generate a unique token for storing your bookshelf data on the backend server.\nlet token = localStorage.token\nif (!token)\n  token = localStorage.token = Math.random().toString(36).substr(-8)\n\nconst headers = {\n  'Accept': 'application/json',\n  'Authorization': token\n}\n\nexport const get = (bookId) =>\n  fetch(`${api}/books/${bookId}`, { headers })\n    .then(res => res.json())\n    .then(data => data.book)\n\nexport const getAll = () =>\n  fetch(`${api}/books`, { headers })\n    .then(res => res.json())\n    .then(data => data.books)\n\nexport const update = (book, shelf) =>\n  fetch(`${api}/books/${book.id}`, {\n    method: 'PUT',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ shelf })\n  }).then(res => res.json())\n\nexport const search = (query) =>\n  fetch(`${api}/search`, {\n    method: 'POST',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ query })\n  }).then(res => res.json())\n    .then(data => data.books)\n","import React, { Component } from 'react'\r\nimport { update } from \"../BooksAPI\";\r\n\r\nexport default class Books extends Component {\r\n  handleChange =async e => {\r\n    e.persist();\r\n    try {\r\n      const shelf = e.target.value;\r\n      const book = this.props;\r\n      const result = await update(book,shelf)\r\n      this.props.moveBook(book,shelf,result);\r\n    }\r\n   catch (error) {\r\n    console.log(error)\r\n   } \r\n  };\r\n\r\n\r\n    render() {\r\n        return (\r\n            <li>\r\n            <div className=\"book\">\r\n              <div className=\"book-top\">\r\n                <div className=\"book-cover\" style={{ width: 128, height: 193, backgroundImage: `url(${this.props.imageLinks ? this.props.imageLinks.thumbnail : \"\"})`}} />\r\n                <div className=\"book-shelf-changer\">\r\n                  <select onChange={this.handleChange} value={this.props.shelf}>\r\n                    <option value=\"move\" disabled>Move to...</option>\r\n                    <option value=\"currentlyReading\">Currently Reading</option>\r\n                    <option value=\"wantToRead\">Want to Read</option>\r\n                    <option value=\"read\">Read</option>\r\n                    <option value=\"none\">None</option>\r\n                  </select>\r\n                </div>\r\n              </div>\r\n              <div className=\"book-title\">{this.props.title}</div>\r\n              <div className=\"book-authors\">{this.props.authors ? this.props.authors[0] : \"No Author\"}</div>\r\n            </div>\r\n          </li>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport Book from \"./Book\";\r\nexport default class Shelf extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"bookshelf\">\r\n                  <h2 className=\"bookshelf-title\">{this.props.title}</h2>\r\n                  <div className=\"bookshelf-books\">\r\n                    <ol className=\"books-grid\">\r\n                        {this.props.books && this.props.books.map(book => <Book key={book.id} {...book} moveBook={this.props.moveBook} />)}\r\n                        {/* //   return (  <li key={book.id}>\r\n                        //     <div className=\"book\">\r\n                        //       <div className=\"book-top\">\r\n                        //         <div className=\"book-cover\" style={{ width: 128, height: 193, backgroundImage: `url(${book.imageLinks.thumbnail})` }} />\r\n                        //         <div className=\"book-shelf-changer\">\r\n                        //           <select value={book.shelf} onChange={(e) => this.props.changeShelf(book, e.target.value)}>\r\n                        //             <option value=\"move\" disabled>Move to...</option>\r\n                        //             <option value=\"currentlyReading\">Currently Reading</option>\r\n                        //             <option value=\"wantToRead\">Want to Read</option>\r\n                        //             <option value=\"read\">Read</option>\r\n                        //             <option value=\"none\">None</option>\r\n                        //           </select>\r\n                        //         </div>\r\n                        //       </div>\r\n                        //       <div className=\"book-title\">{book.title}</div>\r\n                        //       <div className=\"book-authors\">{book.author}</div>\r\n                        //     </div>\r\n                        //   </li>);\r\n                        // })} */}\r\n                      \r\n                     \r\n                    </ol>\r\n                  </div>\r\n                </div>\r\n\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Link } from \"react-router-dom\";\r\nexport default class FAB extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"open-search\">\r\n              <Link to={\"/search\"}><button>Add a book</button></Link>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport Shelf from '../components/Shelf';\r\nimport FAB from '../components/FAB';\r\nimport { getAll } from '../BooksAPI';\r\n\r\n\r\nexport default class Home extends Component {\r\n  async componentDidMount() {\r\n    try {\r\n      const books = await getAll();\r\n      this.props.addBooks(books);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n    render() {\r\n       \r\n        return (\r\n            <div className=\"list-books\">\r\n                <div className=\"list-books-title\">\r\n                    <h1>MyReads</h1>\r\n                </div>\r\n              <div className=\"list-books-content\">\r\n                <Shelf books={this.props.currentlyReading} title={\"Currently Reading\"}  moveBook={this.props.moveBook}/> {/* currently reading */}\r\n                <Shelf books={this.props.wantToRead} title={\"Want to Read\"} moveBook={this.props.moveBook}/> {/* want to read */}\r\n                <Shelf books={this.props.read} title={\"Read\"} moveBook={this.props.moveBook}/> {/* read*/}   \r\n              </div>\r\n              <FAB />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { search } from '../BooksAPI';\r\nimport Books from '../components/Book';\r\nimport { getAll } from '../BooksAPI';\r\n\r\nexport default class Search extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      query: \"\",\r\n      books: []\r\n    }\r\n  }\r\n\r\n  async componentDidMount() {\r\n    try {\r\n      const books = await getAll();\r\n      this.props.addBooks(books);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n\r\n  handleChange = async e => {\r\n    try {\r\n      const query = e.target.value;\r\n      this.setState({ query });\r\n      if(query.trim()) {\r\n      const results = await search(query);\r\n      if (results.error) {\r\n        this.setState({ books: [] });\r\n      } else {\r\n        this.setState({ books: results });\r\n      }\r\n      } else {\r\n        this.setState({ books: [] });\r\n      }\r\n    \r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  \r\n  };\r\n    render() {\r\n        return (\r\n            <div className=\"search-books\">\r\n            <div className=\"search-books-bar\">\r\n              <Link className=\"close-search\" to={\"/\"}>\r\n                Close\r\n                </Link>\r\n              <div className=\"search-books-input-wrapper\">\r\n                {/*\r\n                  NOTES: The search from BooksAPI is limited to a particular set of search terms.\r\n                  You can find these search terms here:\r\n                  https://github.com/udacity/reactnd-project-myreads-starter/blob/master/SEARCH_TERMS.md\r\n\r\n                  However, remember that the BooksAPI.search method DOES search by title or author. So, don't worry if\r\n                  you don't find a specific author or title. Every search is limited by search terms.\r\n                */}\r\n                <input type=\"text\" placeholder=\"Search by title or author\" onChange={this.handleChange} value={this.state.query}/>\r\n\r\n              </div>\r\n            </div>\r\n            <div className=\"search-books-results\">\r\n              <ol className=\"books-grid\">\r\n                {this.state.books.length > 0 && this.state.books.map(book => {\r\n                  const foundShelf = this.props.books.find(\r\n                    searchBook => searchBook.id === book.id\r\n                  );\r\n                  if (foundShelf) {\r\n                    book.shelf = foundShelf.shelf;\r\n                  } else {\r\n                    book.shelf = \"none\";\r\n                  }\r\n                  console.log(foundShelf);\r\n                 return ( <Books key={book.id} {...book} moveBook={this.state.moveBook} />);\r\n                  })}\r\n                  {this.state.books.length === 0 && (\r\n                    <h1 style={{ textAlign: \"center\" }}>No results found</h1>\r\n                  )}\r\n              </ol>\r\n            </div>\r\n          </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nexport const MyContext = React.createContext();\r\n\r\nexport default class index extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n        books: [],\r\n        currentlyReading: [],\r\n        wantToRead: [],\r\n        read: [],\r\n        addBooks: books => {\r\n        const currentlyReading = books.filter(book => book.shelf === \"currentlyReading\");\r\n        const wantToRead = books.filter(book => book.shelf === \"wantToRead\");\r\n        const read = books.filter(book => book.shelf === \"read\");\r\n        this.setState({books, currentlyReading, read, wantToRead });\r\n        },\r\n        moveBook: (book, newShelf, allShelfs) => {\r\n            console.log(newShelf);\r\n            const newBooks = this.state.books.map(allBooks => {\r\n                const foundID = allShelfs[newShelf].find(\r\n                    bookID => bookID === allBooks.id\r\n                );\r\n                if (foundID) {\r\n                    allBooks.shelf = newShelf;\r\n                }\r\n                return allBooks;\r\n            });\r\n            this.state.addBooks(newBooks);\r\n        }\r\n    };\r\n        \r\n    }\r\n    render() {\r\n        return (\r\n            <MyContext.Provider value={{...this.state }}>\r\n                {this.props.children}\r\n            </MyContext.Provider>\r\n        );\r\n    }\r\n}\r\n","import React from 'react'\nimport {BrowserRouter, Switch, Route} from \"react-router-dom\"\nimport './App.css'\nimport Home from './views/Home';\nimport Search from './views/Search';\nimport  Provider,{MyContext}  from './Provider/index';\n\n\nclass BooksApp extends React.Component {\n  \n  render() {\n    return (\n      <div className=\"app\">\n            <Provider>\n              <BrowserRouter>\n              <Switch>\n                <Route exact path={\"/\"} render={() => (\n                <MyContext.Consumer>\n                    {context =>  <Home {...context} />}\n                </MyContext.Consumer>\n                )}\n                />\n                <Route exact path={\"/search\"} render={() => (\n                <MyContext.Consumer>\n                    {context =>  <Search {...context} />}\n                </MyContext.Consumer>\n                )}\n                />\n                \n         \n           </Switch>\n           </BrowserRouter>\n           </Provider>\n          </div>\n      \n      \n    )\n  }\n}\n\nexport default BooksApp;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { BrowserRouter } from 'react-router-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(<BrowserRouter>\n<App />\n</BrowserRouter>, \ndocument.getElementById('root')\n);\n"],"sourceRoot":""}